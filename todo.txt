DONE:
- Import darwin + nixos modules from ./modules/darwin/default.nix and ./modules/nixos/default.nix
- Import THOSE default.nix files from the mk<System> function in flake.nix
    - _core.nix is ONLY for common definitions, not common imports.
- Actually modularize everything?
- auto formatting
    - Step 1: setup alejandra as flake.nix "formatter" output
- Fix sops-nix location, makes no sense now.
- Use nh clean instead of nix.gc (waiting for pull request)
- Run weekly github action
    - Update flake
    - Build ALL outputs
    - IF !errors, send a pull request to main
    - IF !errors upload binary outputs to cachix
- auto formatting
    - Step 2: Setup https://github.com/numtide/treefmt-nix as formatter
- Schedule github workflow to run weekly

TODO:
- NixOS on Raspberry Pi!
- NixOS VM defined in nix (qcow2)
- Add some development shells to ./shells folder
    - Make them enterable with `nix develop github:UncleGravity/dotfiles#<shell_name>`
    - python, c++,
- PERSISTENCE - https://saylesss88.github.io/installation/unencrypted/impermanence.html
- Move neovim to it's own package I can call with `nix run .#nvim`
- Simplify neovim config with lsp stuff: https://gpanders.com/blog/whats-new-in-neovim-0-11/
- Move more home-manager configs to wrappers
- Get rid of home manager one day

Structure:
 - Move all program modules (hackrf, yazi, etc) to my.programs.<name>
 - Move all long running services (immich, tailscale, etc) to my.services.<name>
 - Rename "common" to "shared"
 - Add host specific secrets folder with dummy secrets (so it's easier to add real ones later). Just one host is fine.
 - Change machines/<arch>/<hostname> to machines/<hostname>
 -
