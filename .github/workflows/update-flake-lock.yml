# -----------------------------------------------------------------------------
# Workflow: update-flake-lock.yml
#
# Purpose
#   • Runs `DeterminateSystems/update-flake-lock` to bump `flake.lock`
#   • Opens/updates a PR when changes are found
#   • Sends a ntfy notification when a PR is (re)created
#
# Heavy multi-platform builds are handled by the regular CI workflow.
# -----------------------------------------------------------------------------
name: "Update flake.lock"
on:
  schedule:
    # Every Sunday at 02:00 UTC
    - cron: "0 2 * * 0"
  workflow_dispatch:
permissions:
  contents: write # push branch with new lockfile
  pull-requests: write # open / update PR
  actions: write # allow this workflow to trigger CI
jobs:
  update:
    runs-on: ubuntu-latest
    env:
      PR_BRANCH: update-flake-lock
    steps:
      - uses: actions/checkout@v4 # Checkout repo
      - uses: DeterminateSystems/nix-installer-action@main # Install Nix
      # Update flake inputs + Open pull request
      - name: Update flake.lock & open PR
        id: update-flake
        uses: DeterminateSystems/update-flake-lock@v27
        with:
          commit-msg: "chore: update flake.lock"
          pr-title: "chore: update flake.lock"
          # Short PR body; CI runs will appear automatically
          pr-body: |
            Automated update of `flake.lock`.

            A lightweight `nix flake check` will run in CI; the full
            multi-platform build matrix will follow as standard PR checks.
          branch: ${{ env.PR_BRANCH }}
          token: ${{ secrets.BOT_PAT }}
      # Notify (only when a PR is freshly created)
      - name: Send pull-request notification
        if: steps.update-flake.outputs.pull-request-operation == 'created' || steps.update-flake.outputs.pull-request-operation == 'updated'
        uses: ./.github/actions/ntfy
        with:
          topic: ${{ secrets.NTFY_TOPIC }}
          title: "[Github] PR Created"
          priority: "3"
          tags: "white_check_mark"
          message: |
            ${{ github.workflow }} - Pull request created
            Repo: ${{ github.repository }}
          button_url: ${{ steps.update-flake.outputs.pull-request-url }}
