#
# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝

# -----------------------------------------
# Terminal Compatibility
# -----------------------------------------
# Sets TMUX to be 24-bit color, provided the terminal supports it
set -g default-terminal "tmux-256color"
# # set -g default-terminal "xterm-kitty"
# set-option -ga terminal-overrides ",xterm-256color:Tc,tmux-256color:Tc"

# set -g default-terminal "$TERM"
# set -g terminal-overrides ",$TERM:Tc"

# Yazi compatibility
# https://yazi-rs.github.io/docs/image-preview#tmux
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

set -ga terminal-features "*:hyperlinks" # Enable hyperlinks in tmux
set -s set-clipboard on # Enable clipboard

# -----------------------------------------
# PREFIX
# -----------------------------------------
# Set Prefix to Ctrl-s
set -g prefix C-b
bind C-b send-prefix

# -----------------------------------------
# MISC
set -sg escape-time 25 # Workaround. Prevent appearing 0;10;1c when tmux start
set-option -g status-position top # move status bar to the top

# -----------------------------------------
# KEY BINDINGS
# -----------------------------------------

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Enable vi mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection # visual mode
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel # yank

# split panes using | - (and open new panes in the same directory)
unbind %
unbind '"'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Create new window with C-b n
unbind n
bind n new-window

# Switch widnows with H and L
bind -n M-H previous-window
bind -n M-L next-window

# Switch windows with Alt + Shift +[  ({)  and Alt + Shift +]  (})
bind -n M-\{ previous-window
bind -n M-\} next-window

# Swap Windows
# Better to handle with Prefix+< default behavior (dropdown)
# bind-key -r "<" swap-window -d -t -1
# bind-key -r ">" swap-window -d -t +1

# Start windows and panes at 1 not 0 (breaks twm)
# set-option -g base-index 1
# set-option -g pane-base-index 1
# set-window-option -g pane-base-index 1
# set-option -g renumber-windows on

# Resize panes with prefix C-hjkl
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Kill current session with prefix+k
bind K confirm-before -p "Kill current session? (y/n)" kill-session
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
# set -g detach-on-destroy off  # don't exit from tmux when closing a session

# Prefix + N and P to cycle between sessions
bind P switch-client -p
bind N switch-client -n

# Edit visible pane content in $EDITOR
bind-key e run-shell 'tmux capture-pane -p > /tmp/tmux-capture-$$.txt && tmux send-keys "${EDITOR:-nvim} /tmp/tmux-capture-$$.txt" Enter'
# Edit entire scrollback history in $EDITOR (prefix + E for full history)
bind-key E run-shell 'tmux capture-pane -S -32768 -p > /tmp/tmux-history-$$.txt && tmux send-keys "${EDITOR:-nvim} /tmp/tmux-history-$$.txt" Enter'

# Indicate active pane by colouring only half of the border in windows with
# exactly two panes, by displaying arrow markers, by drawing both or neither.
set -g pane-border-indicators both # [off | colour | arrows | both]

# Border lines between panes are thicker
# single -> single lines using ACS or UTF-8 characters
# double -> double lines using UTF-8 characters
# heavy  -> heavy lines using UTF-8 characters
# simple -> simple ASCII characters
# number -> the pane number
set -g pane-border-lines double

# -----------------------------------------
# SESH
# -----------------------------------------
# Don't exit from tmux when closing a session
set -g detach-on-destroy off

# Prefix L for last session (using sesh)
# The default <prefix>+L command will "Switch the attached client back to the last session."
# However, if you close a session while detach-on-destroy off is set, the last session will not be found.
# To fix this, I have a sesh last command that will always switch the client to the second to last session that has been attached.
bind -N "last-session (via sesh) " L run-shell "sesh last"

# -----------------------------------------
# VARIABLES
# -----------------------------------------
# Define command combinations as environment variables
set-environment -g SESH_GIT_COMMAND "
    fd -t d -H '\.git$' \
    ~ \
    \$(test -d /media/psf/Home && echo /media/psf/Home) \
    --exclude Library \
    --exclude '/.*/' \
    -x sh -c 'echo -e \"\\033[38;2;241;80;47m \\033[0m$(echo \"{//}\" | sed -E \"s|$HOME|~|\")\"' \
;"
set-environment -g SESH_ALL_COMMANDS "
    sesh list -it;
    sesh list -ic;
    # sesh list -jz | jq -r '.[] | select(.Score >= 1) | \"\\u001b[36m \\u001b[0m\" + .Name';
    sesh list -iz;
    eval \$SESH_GIT_COMMAND;
"

bind-key "k" run-shell "
    sesh connect \"$( eval \$SESH_ALL_COMMANDS | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header '  ^a all ^t tmux ^g git ^s configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(eval \$SESH_ALL_COMMANDS)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -it)' \
    --bind 'ctrl-g:change-prompt(🔎  )+reload(eval \$SESH_GIT_COMMAND)' \
    --bind 'ctrl-s:change-prompt(⚙️  )+reload(sesh list -ic)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -iz)' \
    --bind 'ctrl-f:change-prompt(🔍  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    -- --ansi \
    | sed -e 's/ / /'     # <-- replace git icon with folder icon (sesh will fail otherwise)
)\""


# bind k run-shell "tmux neww twm"


bind-key "g" run-shell 'tmux display-popup -E -w 90% -h 90% "cd #{pane_current_path} && lazygit"'

# -----------------------------------------
# MISC
# -----------------------------------------

# Set status update interval to 1 second
set -g status-interval 1

# # don't exit copy mode after dragging with mouse
# unbind -T copy-mode-vi MouseDragEnd1Pane

# # don't rename windows automatically
# set-option -g allow-rename off
